# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
     # sets up .NET Core SDK
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'
          # dotnet-quality: 'preview'
     # publishes Blazor project to the release-folder
      - name: Publish .NET Core Project
        run: dotnet publish KEForms.csproj -c Release -o release --nologo

     # changes the base-tag in index.html from '/' to 'KEForms' to match GitHub Pages repository subdirectory
      - name: Change base-tag in index.html from / to KEForms
        run: sed -i 's/<base href="\/" \/>/<base href="\/KEForms\/" \/>/g' release/wwwroot/index.html
     # copy index.html to 404.html to serve the same file when a file is not found
      - name: copy index.html to 404.html
        run: cp release/wwwroot/index.html release/wwwroot/404.html
     # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll
     # continue to upload pages for GitHub Deploy
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: 'release/wwwroot'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
